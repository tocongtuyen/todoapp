var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.notificationManager=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _reactNativePushNotification=_interopRequireDefault(require("react-native-push-notification"));var _pushNotificationIos=_interopRequireDefault(require("@react-native-community/push-notification-ios"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}var NotificationManager=function NotificationManager(){var _this=this;(0,_classCallCheck2.default)(this,NotificationManager);this.configure=function(onRegister,_onNotification,onOpenNotification){_reactNativePushNotification.default.configure({onRegister:function onRegister(token){console.log('[NotificationManager] onRegister token:',token);},onNotification:function onNotification(notification){console.log('[NotificationManager] onNotification:',notification);if(_reactNative.Platform.OS==='ios'){if(notification.data.openedInForeground){notification.userInteraction=true;}}else{notification.userInteraction=true;}if(notification.userInteraction){onOpenNotification(notification);}else{_onNotification(notification);}if(_reactNative.Platform.OS==='ios'){if(!notification.data.openedInForeground){notification.finish('backgroundFetchResultNoData');}}else{notification.finish('backgroundFetchResultNoData');}}});};this._buildAndroidNotification=function(id,title,message){var data=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};return{id:id,autoCancel:true,largeIcon:options.largeIcon||'ic_launcher',smallIcon:options.smallIcon||'ic_launcher',bigText:message||'',subText:title||'',vibrate:options.vibrate||false,vibration:options.vibration||300,priority:options.priority||'hight',importance:options.importance||'hight',data:data};};this._buildIOSNotification=function(id,title,message){var data=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};return{alertAction:options.alertAction||'view',category:options.category||'',userInfo:{id:id,item:data}};};this.showNotification=function(id,title,message){var data=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};_reactNativePushNotification.default.localNotificationSchedule(_objectSpread(_objectSpread(_objectSpread({},_this._buildAndroidNotification(id,title,message,data,options)),_this._buildIOSNotification(id,title,message,data,options)),{},{title:title||'',message:message||'',playSound:options.playSound||false,soundName:options.soundName||'default',userInteraction:false,date:new Date(Date.now()+120*1000)}));};this.cancelAllLocalNotification=function(){if(_reactNative.Platform.OS==='ios'){_pushNotificationIos.default.removeAllDeliveredNotifications();}else{_reactNativePushNotification.default.cancelAllLocalNotification();}};this.unregister=function(){_reactNativePushNotification.default.unregister;};};var notificationManager=new NotificationManager();exports.notificationManager=notificationManager;